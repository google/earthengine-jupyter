# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_layout.ipynb.

# %% auto 0
__all__ = ['MapWithInspector']

# %% ../nbs/02_layout.ipynb 4
from .ipyleaflet import Map
from .ipyleaflet import Inspector
import ee
import ipyleaflet
import ipywidgets as widgets
import logging

# %% ../nbs/02_layout.ipynb 8
class MapWithInspector(widgets.HBox):
    """A map with a tobbleable inspector."""
    
    # Font Awesome icons: https://fontawesome.com/v4/examples/
    ICON_INSPECTOR_SHOWN = 'info-circle 2x fw inverse'
    ICON_INSPECTOR_HIDDEN = 'info-circle 2x fw'
    
    def __init__(self, **kwargs):
        
        self.map = Map(**kwargs)
        
        button_inspector_toggle = widgets.Button(
            icon = self.ICON_INSPECTOR_SHOWN,
            layout = widgets.Layout(width='45px', height='45px', padding='0px')
        )
            
        def show_inspector(visible):
            if visible:
                self.inspector.layout.width = None
                self.inspector.layout.min_width = f'300px'
                self.inspector.disabled = False
            else:
                self.inspector.layout.width = f'0%'
                self.inspector.layout.min_width = None
                self.inspector.disabled = True
        
        def on_button_clicked(_b):
            if _b.icon == self.ICON_INSPECTOR_HIDDEN:
                show_inspector(False)
                _b.icon = self.ICON_INSPECTOR_SHOWN
            else:
                show_inspector(True)
                _b.icon = self.ICON_INSPECTOR_HIDDEN
        button_inspector_toggle.on_click(on_button_clicked)
        
        widget_control1 = ipyleaflet.WidgetControl(widget=button_inspector_toggle,
                                                   position='topright')
        self.map.add_control(widget_control1)
        self.inspector = Inspector(self.map)
        
        kwargs['children'] = [self.map, self.inspector]
        show_inspector(False)
        
        super().__init__(**kwargs)
